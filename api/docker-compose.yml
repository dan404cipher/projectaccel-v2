version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: projectaccel-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: projectaccel
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - projectaccel-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (for future scaling)
  redis:
    image: redis:7-alpine
    container_name: projectaccel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - projectaccel-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend (Development)
  api-dev:
    build:
      context: .
      target: development
    container_name: projectaccel-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/projectaccel?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_ACCESS_SECRET: your-super-secret-jwt-access-key-dev
      JWT_REFRESH_SECRET: your-super-secret-jwt-refresh-key-dev
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - projectaccel-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - dev

  # API Backend (Production)
  api:
    build:
      context: .
      target: production
    container_name: projectaccel-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/projectaccel?authSource=admin
      REDIS_URL: redis://redis:6379
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - projectaccel-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - prod

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: projectaccel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - projectaccel-network
    depends_on:
      - api
    profiles:
      - prod

networks:
  projectaccel-network:
    driver: bridge
    name: projectaccel-network

volumes:
  mongodb_data:
    name: projectaccel-mongodb-data
  redis_data:
    name: projectaccel-redis-data
